import React, { useState, useEffect } from "react";

export default function SubscriptionModal({ onClose }) {
  const [selectedPeriod, setSelectedPeriod] = useState(null);
  const [selectedPayment, setSelectedPayment] = useState(null);
  const [showSbpInfo, setShowSbpInfo] = useState(false);
  const [timer, setTimer] = useState(null);
  const [copied, setCopied] = useState(false);
  const [loading, setLoading] = useState(false);

  useEffect(() => {
    let interval;
    if (timer !== null && timer > 0) {
      interval = setInterval(() => {
        setTimer((prev) => {
          if (prev <= 1) {
            clearInterval(interval);
            return 0;
          }
          return prev - 1;
        });
      }, 1000);
    }
    return () => clearInterval(interval);
  }, [timer]);

  const handleNext = async () => {
    if (selectedPayment === "sbp") {
      if (!selectedPeriod) {
        alert("–í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–∏–æ–¥ –ø–æ–¥–ø–∏—Å–∫–∏");
        return;
      }

      // üí¨ –æ–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—É–º–º—É –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É –ø–µ—Ä–∏–æ–¥—É
      const amount = selectedPeriod === "1m" ? 99 : 289;

      // üí¨ –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ü–∏—Ñ—Ä—ã –ÆMoney —Å—á—ë—Ç–∞ (–¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ)
      const last4Digits = "2951"; // –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ü–∏—Ñ—Ä—ã –Ω–æ–º–µ—Ä–∞ +7(995)896-29-51

      try {
        setLoading(true);

        // üí¨ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –∑–∞–ø–∏—Å—å –ø–ª–∞—Ç–µ–∂–∞
        const response = await fetch("/subscription/sbp-init", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ last4Digits, amount }),
        });

        const data = await response.json();

        if (data.success) {
          console.log("‚úÖ –ü–ª–∞—Ç—ë–∂ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω:", data.paymentId);
          setShowSbpInfo(true);
          setTimer(15 * 60); // 15 –º–∏–Ω—É—Ç –Ω–∞ –æ–ø–ª–∞—Ç—É
        } else {
          alert("–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–ª–∞—Ç–µ–∂–∞");
        }
      } catch (err) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–ª–∞—Ç–µ–∂–∞:", err);
        alert("–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º");
      } finally {
        setLoading(false);
      }
    }
  };

  const handleCopy = () => {
    navigator.clipboard.writeText("9958962951");
    setCopied(true);
    setTimeout(() => setCopied(false), 2000);
  };

  const formatTime = (seconds) => {
    const m = Math.floor(seconds / 60)
      .toString()
      .padStart(2, "0");
    const s = (seconds % 60).toString().padStart(2, "0");
    return `${m}:${s}`;
  };

  return (
    <div
      style={{
        position: "fixed",
        top: 0,
        left: 0,
        width: "100%",
        height: "100%",
        backgroundColor: "rgba(0,0,0,0.6)",
        display: "flex",
        justifyContent: "center",
        alignItems: "center",
        padding: "32px",
        boxSizing: "border-box",
        zIndex: 10000,
      }}
    >
      <div
        style={{
          backgroundColor: "#0a1f33",
          borderRadius: 24,
          padding: "25px 20px 25px 20px",
          maxWidth: 400,
          width: "100%",
          position: "relative",
          boxSizing: "border-box",
          color: "#fff",
        }}
      >
        {/* –ö—Ä–µ—Å—Ç–∏–∫ */}
        <button
          onClick={onClose}
          style={{
            position: "absolute",
            top: 7,
            right: 10,
            background: "transparent",
            border: "none",
            color: "#888",
            fontSize: 20,
            cursor: "pointer",
            padding: 0,
            lineHeight: 1,
          }}
          aria-label="–ó–∞–∫—Ä—ã—Ç—å"
        >
          ‚úï
        </button>

        <h2
          style={{
            margin: "0 0 27px 0",
            textAlign: "center",
            fontSize: 18,
          }}
        >
          –í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–∏–æ–¥ –∏ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã
        </h2>

        {/* –ü–µ—Ä–∏–æ–¥ –ø–æ–¥–ø–∏—Å–∫–∏ */}
        <div
          style={{
            display: "flex",
            gap: 12,
            justifyContent: "center",
            marginBottom: 16,
          }}
        >
          {[
            { label: "1 –º–µ—Å—è—Ü - 99‚ÇΩ", value: "1m" },
            { label: "3 –º–µ—Å—è—Ü–∞ - 289‚ÇΩ", value: "3m" },
          ].map((period) => (
            <button
              key={period.value}
              onClick={() => setSelectedPeriod(period.value)}
              style={{
                padding: "10px 14px",
                borderRadius: 12,
                border:
                  selectedPeriod === period.value
                    ? "2px solid #2787f5"
                    : "2px solid transparent",
                backgroundColor: "#1e2b45",
                color: "#fff",
                fontWeight: 600,
                cursor: "pointer",
                flex: 1,
                textAlign: "center",
                transition: "all 0.2s",
              }}
            >
              {period.label}
            </button>
          ))}
        </div>

        {/* –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å–Ω–∞—è –ª–∏–Ω–∏—è */}
        <div
          style={{
            height: "1px",
            backgroundColor: "rgba(255, 255, 255, 0.2)",
            width: "calc(100% - 32px)",
            margin: "0 auto 16px auto",
          }}
        ></div>

        {/* –°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã */}
        <div
          style={{
            display: "flex",
            gap: 12,
            justifyContent: "center",
            marginBottom: 27,
          }}
        >
          {[
            { label: "–ö–∞—Ä—Ç–æ–π –æ–Ω–ª–∞–π–Ω", value: "card" },
            { label: "–ü–µ—Ä–µ–≤–æ–¥ —á–µ—Ä–µ–∑ –°–ë–ü", value: "sbp" },
          ].map((payment) => (
            <button
              key={payment.value}
              onClick={() => {
                setSelectedPayment(payment.value);
                setShowSbpInfo(false);
              }}
              style={{
                padding: "10px 14px",
                borderRadius: 12,
                border:
                  selectedPayment === payment.value
                    ? "2px solid #2787f5"
                    : "2px solid transparent",
                backgroundColor: "#1e2b45",
                color: "#fff",
                fontWeight: 600,
                cursor: "pointer",
                minWidth: 120,
                textAlign: "center",
                transition: "all 0.2s",
              }}
            >
              {payment.label}
            </button>
          ))}
        </div>

        {/* –ö–Ω–æ–ø–∫–∞ –î–∞–ª–µ–µ –∏–ª–∏ –¢–∞–π–º–µ—Ä */}
        {selectedPayment === "sbp" && timer !== null ? (
          <div
            style={{
              textAlign: "center",
              margin: "0 32px",
              padding: "8px 0",
              background: "#2787f5",
              borderRadius: 16,
              color: "#fff",
              fontWeight: 600,
              fontSize: 15,
            }}
          >
            {formatTime(timer)}
          </div>
        ) : (
          <button
            onClick={handleNext}
            disabled={loading}
            style={{
              display: "block",
              margin: "0 32px",
              padding: "8px 0px",
              background: loading ? "#1e6cd8aa" : "#2787f5",
              color: "#fff",
              border: "none",
              borderRadius: 16,
              cursor: "pointer",
              fontWeight: 600,
              fontSize: 15,
              transition: "all 0.2s",
              width: "calc(100% - 64px)",
            }}
          >
            {loading ? "–°–æ–∑–¥–∞—ë–º –ø–ª–∞—Ç—ë–∂..." : "–î–∞–ª–µ–µ"}
          </button>
        )}

        {/* –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –°–ë–ü */}
        {showSbpInfo && (
          <div
            style={{
              position: "absolute",
              bottom: 16,
              left: "50%",
              transform: "translateX(-50%)",
              backgroundColor: "#1a2738",
              borderRadius: 12,
              padding: "12px 16px",
              fontSize: 13,
              width: "calc(100% - 32px)",
              boxSizing: "border-box",
              textAlign: "left",
              zIndex: 10,
            }}
          >
            <div style={{ textAlign: "center", marginBottom: 8 }}>
              –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Å–≤–æ–π –º–æ–±–∏–ª—å–Ω—ã–π –±–∞–Ω–∫ –∏ —Å–æ–≤–µ—Ä—à–∏—Ç–µ –ø–µ—Ä–µ–≤–æ–¥ —á–µ—Ä–µ–∑ –°–ë–ü –ø–æ
              —Ä–µ–∫–≤–∏–∑–∏—Ç–∞–º, —É–∫–∞–∑–∞–Ω–Ω—ã–º –Ω–∏–∂–µ.
            </div>
            <div style={{ textAlign: "center", marginBottom: 8 }}>
              –ü–µ—Ä–µ–≤–æ–¥–∏—Ç–µ —Ä–æ–≤–Ω–æ –≤—ã–±—Ä–∞–Ω–Ω—É—é —Å—É–º–º—É!
            </div>
            <div
              style={{ textAlign: "center", marginBottom: 13, fontStyle: "italic" }}
            >
              * –ü–µ—Ä–µ–≤–æ–¥ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–≤–µ—Ä—à–∏—Ç—å –¥–æ –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ç–∞–π–º–µ—Ä–∞.
            </div>

            <div style={{ display: "flex", flexDirection: "column", gap: 4 }}>
              <div style={{ display: "flex", alignItems: "center", gap: 4 }}>
                <span>
                  –ù–æ–º–µ—Ä: <b style={{ fontSize: 14 }}>+7(995) 896-29-51</b>
                </span>

                <div
                  onClick={handleCopy}
                  title="–°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–º–µ—Ä"
                  style={{
                    position: "relative",
                    width: 14,
                    height: 14,
                    cursor: "pointer",
                    marginLeft: 4,
                    marginTop: -5,
                  }}
                >
                  <div
                    id="copy-icon"
                    style={{
                      position: "absolute",
                      top: 0,
                      left: 0,
                      width: "100%",
                      height: "100%",
                      border: "1.6px solid #2787f5",
                      borderRadius: 2,
                      transition: "all 0.3s ease",
                    }}
                  ></div>
                  <div
                    style={{
                      position: "absolute",
                      top: 3,
                      left: 3,
                      width: "100%",
                      height: "100%",
                      border: "1.6px solid #2787f5",
                      borderRadius: 2,
                      opacity: 0.6,
                    }}
                  ></div>
                </div>
              </div>
              <span>
                –ë–∞–Ω–∫ –ø–æ–ª—É—á–∞—Ç–µ–ª—è: <b style={{ fontSize: 14 }}>–Æ–º–∞–Ω–∏ (–ÆMoney)</b>
              </span>
            </div>

            <div
              onClick={() => setShowSbpInfo(false)}
              style={{
                marginTop: 14,
                cursor: "pointer",
                color: "#2787f5",
                textAlign: "center",
                lineHeight: 0.8,
                fontSize: 15,
                fontWeight: 500,
                userSelect: "none",
              }}
            >
              <div>–ü–æ–Ω—è—Ç–Ω–æ</div>
            </div>
          </div>
        )}

        {copied && (
          <div
            style={{
              position: "fixed",
              bottom: "12.5%",
              left: "50%",
              transform: "translateX(-50%)",
              backgroundColor: "#2787f5",
              color: "#fff",
              padding: "6px 12px",
              borderRadius: 16,
              fontSize: 13,
              zIndex: 20000,
              boxShadow: "0 2px 6px rgba(0,0,0,0.3)",
              textAlign: "center",
            }}
          >
            –ù–æ–º–µ—Ä —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω!
          </div>
        )}
      </div>
    </div>
  );
}